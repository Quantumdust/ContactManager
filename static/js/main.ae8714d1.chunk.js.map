{"version":3,"sources":["context.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/contacts/EditContact.js","Components/test/Test.js","Components/layout/Header.js","pages/About.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","value","this","props","children","axios","get","res","data","Component","Consumer","Contact","showContactInfo","onClickDelete","a","delete","onClickToggle","e","PropTypes","name","string","isRequired","email","phone","className","sytle","cursor","onClick","float","bind","to","Contacts","Fragment","key","TextInputGroup","label","onChange","placeholder","error","htmlFor","classnames","defaultProps","AddContacts","showAddContact","errors","target","onSubmit","event","preventDefault","newcontact","post","history","push","EditContacts","match","params","put","Test","title","body","fetch","then","response","json","Header","branding","href","prototype","About","NotFound","App","exact","path","component","AddContact","EditContact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae8714d1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\nconst reducer =(state,action)=>{\r\n    switch (action.type) {\r\n        case 'DeleteContact':\r\n            return{\r\n                ...state,\r\n                contacts:state.contacts.filter(contact=>contact.id!==action.payload\r\n                )\r\n            }\r\n        case 'AddContact':\r\n            return{\r\n                ...state,\r\n                contacts:[action.payload,...state.contacts]\r\n            }\r\n        case 'EditContact':\r\n            return{\r\n                ...state,\r\n                contacts:state.contacts.map(contact=>\r\n                    (contact.id===action.payload.id?action.payload:contact)\r\n                )\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport class Provider extends Component {\r\n    \r\n    state={\r\n        contacts: [\r\n           \r\n        ],\r\n        dispatch:action=>{\r\n            this.setState(state=>reducer(state,action));\r\n        }\r\n        \r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n    async componentDidMount(){\r\n        const res=await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts:res.data});\r\n    }\r\n} \r\nexport  const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context'\r\nimport axios from 'axios';\r\nimport {Link} from  'react-router-dom';\r\n class Contact extends Component {\r\n     state={\r\n         showContactInfo:false\r\n     }\r\n    onClickDelete=async (id,dispatch)=>{\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({payload:id,type:'DeleteContact'});\r\n       \r\n    };\r\n    onClickToggle=(e)=>{\r\n        //console.log('hello');\r\n        this.setState({showContactInfo:!(this.state.showContactInfo)});\r\n    };\r\n    render() {\r\n        const {id, name , email , phone } =this.props.contact;\r\n        return (\r\n            <Consumer>\r\n                {value=>{\r\n                    const {dispatch}=value;\r\n                    return(\r\n                        <div className=\"card card-body mb-3\">\r\n                            \r\n                            <h4>\r\n                                {name}\r\n                                <i sytle={{cursor:'pointer'}} onClick={this.onClickToggle} className=\"fas fa-angle-down ml-2\" />\r\n                                <i sytle={{cursor:'pointer',float:'right'}} onClick={this.onClickDelete.bind(this,id,dispatch)} className=\"fas fa-trash-alt float-right\"/>\r\n                                <Link to={`/edit/${id}`} sytle={{cursor:'pointer',float:'right'}} className=\"fas fa-pencil-alt float-right mr-3 ml-3\"/>\r\n                            </h4> \r\n                            {\r\n                                this.state.showContactInfo?\r\n                                \r\n                                (<ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>)\r\n        \r\n                                :null\r\n                            }\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n    PropTypes = {\r\n    name  : PropTypes.string.isRequired,\r\n    email : PropTypes.string.isRequired,\r\n    phone : PropTypes.string.isRequired\r\n}\r\n}\r\n\r\nexport default Contact; ","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n class Contacts extends Component {\r\n     \r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts}=value;\r\n                        return(\r\n                        \r\n                        <React.Fragment>\r\n                            <h4 className=\"display-4 mb-3\"><span className='text-danger'>Contact </span>List</h4 >\r\n                            {\r\n                                contacts.map(contact =>(\r\n                                //<h1>{contact.name}</h1>\r\n                                <Contact key={contact.id} contact={contact} />\r\n                                )\r\n\r\n                                )\r\n                            } \r\n                        </React.Fragment>\r\n                        )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n\r\n\r\n        // const {contacts}=this.state;\r\n        \r\n        // return ( \r\n        //     <React.Fragment>\r\n        //         {\r\n        //             contacts.map(contact =>(\r\n        //             //<h1>{contact.name}</h1>\r\n        //               <Contact key={contact.id} contact={contact} onClickDelete={this.onClickDelete} />\r\n        //             )\r\n\r\n        //             )\r\n        //         } \r\n        //     </React.Fragment>\r\n        // )\r\n    }\r\n}\r\nexport default Contacts;","import React from 'react';\r\nimport classnames from 'classname';\r\nconst TextInputGroup=({name,label,onChange,type,placeholder,value,error}) => {\r\n   return (\r\n        \r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"name\">{label} </label>\r\n            <input \r\n            type={type}\r\n            name={name}\r\n            className={classnames(\"form-control form-control-lg\",\r\n                                    {'is-invalid':error}\r\n            )}\r\n            value={value}\r\n            placeholder={placeholder}\r\n            onChange={onChange}\r\n            />\r\n            <div className=\"invalid-feedback\">{error}</div>\r\n        </div>\r\n        \r\n        \r\n     )\r\n}\r\nTextInputGroup.defaultProps = {\r\n    type:'text'\r\n}\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\n//import uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nexport default class AddContacts extends Component {\r\n    state={\r\n        name:'',\r\n        phone:'',\r\n        email:'',\r\n        showAddContact:true,\r\n        errors:{}\r\n    }\r\n    onClickToggle=()=>{\r\n        this.setState({showAddContact:!(this.state.showAddContact)})\r\n    };\r\n    onChange=e=>{this.setState({[e.target.name]:e.target.value})};\r\n\r\n    onSubmit=async (dispatch,event)=>{\r\n        event.preventDefault();\r\n        const {name,email,phone}=this.state;\r\n        if(name === ''){this.setState({errors:{name:'name is required'}});return};\r\n        if(email === ''){this.setState({errors:{email:'email is required'}});return}\r\n        if(phone === ''){this.setState({errors:{phone:'phone is required'}});return}\r\n        //const newcontact={id:uuid(),name,email,phone};\r\n        const newcontact={name,email,phone};\r\n        const res=await axios.post('https://jsonplaceholder.typicode.com/users',newcontact);\r\n        dispatch({type:'AddContact',payload:res.data});\r\n         this.setState({name:'',email:'',phone:'',errors:{}})\r\n         this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const {name,email,phone,errors}=this.state;\r\n        return(\r\n            <Consumer>\r\n                {value=>{\r\n                   const {dispatch}=value;\r\n                   return(\r\n                    <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">Add Contact<b sytle={{cursor:'pointer'}} onClick={this.onClickToggle} className=\"fas fa-angle-down ml-3\"></b></div>\r\n                    {\r\n                        this.state.showAddContact?\r\n                        (\r\n                            \r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                <TextInputGroup\r\n                                name='name'   \r\n                                value={name} \r\n                                placeholder='Name..'\r\n                                onChange={this.onChange}\r\n                                label='Name'\r\n                                error={errors.name}\r\n                                />\r\n                                \r\n                                <TextInputGroup\r\n                                name='email'   \r\n                                value={email} \r\n                                placeholder='Email..'\r\n                                onChange={this.onChange}\r\n                                label='Email'\r\n                                type='email'\r\n                                error={errors.email}\r\n                                />\r\n                                \r\n                                <TextInputGroup\r\n                                name='phone'   \r\n                                value={phone} \r\n                                placeholder='Phone..'\r\n                                onChange={this.onChange}\r\n                                label='Phone'\r\n                                error={errors.phone}\r\n                                />\r\n                                \r\n                                <input \r\n                                type=\"submit\" \r\n                                value=\"AddContact\" \r\n                                className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                        )\r\n                        :null\r\n                    }\r\n                </div>\r\n                   )\r\n                }}\r\n            </Consumer>\r\n        )\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\n//import uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nexport default class EditContacts extends Component {\r\n    state={\r\n        name:'',\r\n        phone:'',\r\n        email:'',\r\n        showAddContact:true,\r\n        errors:{}\r\n    }\r\n    async componentDidMount(){\r\n        const {id}=this.props.match.params;\r\n        //console.log(id);\r\n        const res=await (await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)).data;\r\n        this.setState({name:res.name,email:res.email,phone:res.phone});\r\n    }\r\n    onClickToggle=()=>{\r\n        this.setState({showAddContact:!(this.state.showAddContact)})\r\n    };\r\n    onChange=e=>{this.setState({[e.target.name]:e.target.value})};\r\n\r\n    onSubmit=async (dispatch,event)=>{\r\n        event.preventDefault();\r\n        const {name,email,phone}=this.state;\r\n        if(name === ''){this.setState({errors:{name:'name is required'}});return};\r\n        if(email === ''){this.setState({errors:{email:'email is required'}});return}\r\n        if(phone === ''){this.setState({errors:{phone:'phone is required'}});return}\r\n        //const newcontact={id:uuid(),name,email,phone};\r\n        const newcontact={name,email,phone};\r\n        const {id}=this.props.match.params;\r\n        const res=await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,newcontact);\r\n        dispatch({type:'EditContact',payload:res.data});\r\n        \r\n        ///clear state\r\n         this.setState({name:'',email:'',phone:'',errors:{}})\r\n         this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const {name,email,phone,errors}=this.state;\r\n        return(\r\n            <Consumer>\r\n                {value=>{\r\n                   const {dispatch}=value;\r\n                   return(\r\n                    <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">Edit Contact<b sytle={{cursor:'pointer'}} onClick={this.onClickToggle} className=\"fas fa-angle-down ml-3\"></b></div>\r\n                    {\r\n                        this.state.showAddContact?\r\n                        (\r\n                            \r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                <TextInputGroup\r\n                                name='name'   \r\n                                value={name} \r\n                                placeholder='Name..'\r\n                                onChange={this.onChange}\r\n                                label='Name'\r\n                                error={errors.name}\r\n                                />\r\n                                \r\n                                <TextInputGroup\r\n                                name='email'   \r\n                                value={email} \r\n                                placeholder='Email..'\r\n                                onChange={this.onChange}\r\n                                label='Email'\r\n                                type='email'\r\n                                error={errors.email}\r\n                                />\r\n                                \r\n                                <TextInputGroup\r\n                                name='phone'   \r\n                                value={phone} \r\n                                placeholder='Phone..'\r\n                                onChange={this.onChange}\r\n                                label='Phone'\r\n                                error={errors.phone}\r\n                                />\r\n                                \r\n                                <input \r\n                                type=\"submit\" \r\n                                value=\"UpdateContact\" \r\n                                className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                        )\r\n                        :null\r\n                    }\r\n                </div>\r\n                   )\r\n                }}\r\n            </Consumer>\r\n        )\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state={\r\n        title:'',\r\n        body:''\r\n    }\r\n    render() {\r\n        const {title,body}=this.state;\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\">{title}</h1>\r\n        <h4 >{body}</h4>   \r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n     .then(response => response.json())\r\n    .then(data => this.setState({title:data.title,body:data.body}))\r\n    }\r\n}\r\nexport default  Test;","\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\nconst Header = props => {\r\n    const {branding}=props;\r\n    return (\r\n       < nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-1\">\r\n           <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"> \r\n                               <i className=\"fas fa-home\"></i> Home \r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/add\" className=\"nav-link\"> \r\n                               <i className=\"fas fa-plus\"></i> AddContact \r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"> \r\n                               <i className=\"fas fa-question\"></i> About \r\n                            </Link>\r\n                        </li>\r\n                       \r\n                    </ul>\r\n                </div>\r\n           </div>\r\n       </nav>       \r\n        // <div>\r\n        //     <h1 >{branding}</h1>\r\n        // </div>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    branding: 'Branding Logo'\r\n}\r\nHeader.prototype={\r\n    branding: PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React from 'react'\r\n\r\nexport default function About(){\r\n    return (\r\n        <div>\r\n            \r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p>cut gaya hamra is course me to </p>\r\n            <p className=\"text-secondary\">version 0.1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport Contacts from './Components/contacts/Contacts';\nimport AddContact from './Components/contacts/AddContact';\nimport EditContact from './Components/contacts/EditContact';\nimport Test from './Components/test/Test';\nimport Header from './Components/layout/Header';\nimport About from './pages/About';\nimport NotFound from './pages/NotFound';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from './context';\nimport {HashRouter as Router ,Route,Switch} from 'react-router-dom';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1>The main app component</h1>\n//     </div>\n//   );\n// }\nclass App extends React.Component {\n  render(){\n    return(\n    <Provider>\n      <Router>\n        <div className='App'>\n          <Header branding=\"Contact Manager\"/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}/>\n              <Route exact path=\"/add\" component={AddContact}/>\n              <Route exact path=\"/edit/:id\" component={EditContact}/>\n              <Route exact path=\"/about\" component={About}/>\n              <Route exact path=\"/Test\" component={Test}/>\n              <Route exact  component={NotFound}/>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n    )\n  }\n}\n// App=()=>{\n//  return( <div className=\"App\">\n//  <h1>The main app component</h1>\n// </div>);\n// };\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}